name: Windows use ccache

on: 
  push:
    branches: [ "ccache" ]

env:
  BUILD_TYPE: Release
  CCACHE_VERSION: 4.7.4
  

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: Download ccache
      run: Invoke-WebRequest -Uri https://github.com/ccache/ccache/releases/download/v${{ env.CCACHE_VERSION }}/ccache-${{ env.CCACHE_VERSION }}-windows-x86_64.zip  -OutFile '${{ github.workspace }}\ccache.zip'

    - name: Unzip ccache
      run: Expand-Archive -Path '${{ github.workspace }}\ccache.zip' -DestinationPath '{{ github.workspace }}'

    - name: List ccache Directory
      run: Get-ChildItem '{{ github.workspace }}\ccache-${{ env.CCACHE_VERSION }}-windows-x86_64'

    - name: echo Path before
      run: ($env:Path).Replace(';',"`n")

    - name: echo Path after
      run: |
        $env:Path += ";${{ github.workspace }}\ccache-${{ env.CCACHE_VERSION }}-windows-x86_64"
        ($env:Path).Replace(';',"`n")

    - name: CMake ccache Setup
      shell: cmake -P {0}
      run: |
        file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}" ccache_basedir)
        set(ENV{CCACHE_BASEDIR} "${ccache_basedir}")
        set(ENV{CCACHE_DIR} "${ccache_basedir}/.ccache")
        set(ENV{CCACHE_COMPRESS} "true")
        set(ENV{CCACHE_COMPRESSLEVEL} "6")
        set(ENV{CCACHE_MAXSIZE} "600M")

    - name: Restore cached ccache
      id: cache-ccache-restore
      uses: actions/cache/restore@v3
      with:
        path: .ccache
        key: ${{ runner.os }}-ccache

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build Application
      run: |
        $env:Path += ";${{ github.workspace }}\ccache-${{ env.CCACHE_VERSION }}-windows-x86_64"
        cmake --build ${{ github.workspace }} --config ${{ env.BUILD_TYPE }} --target dndmanager

    # - name: ccache statistics
    #   shell: cmake -P {0}
    #   run: |
    #     file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}" ccache_basedir)
    #     set(ENV{CCACHE_BASEDIR} "${ccache_basedir}")
    #     set(ENV{CCACHE_DIR} "${ccache_basedir}/.ccache")

    #     execute_process(COMMAND ccache -s)

    # - name: Save ccache
    #   id: cache-ccache-save
    #   uses: actions/cache/save@v3
    #   with:
    #     path: .ccache
    #     key: ${{ steps.cache-ccache-restore.outputs.cache-primary-key }}

    # - name: CMake ccache Setup
    #   shell: cmake -P {0}
    #   run: |
    #     file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}" ccache_basedir)
    #     set(ENV{CCACHE_BASEDIR} "${ccache_basedir}")
    #     set(ENV{CCACHE_DIR} "${ccache_basedir}/.ccache")
    #     set(ENV{CCACHE_COMPRESS} "true")
    #     set(ENV{CCACHE_COMPRESSLEVEL} "6")
    #     set(ENV{CCACHE_MAXSIZE} "600M")

    # - name: Prepare ccache timestamp
    #   id: ccache_cache_timestamp
    #   shell: cmake -P {0}
    #   run: |
    #     string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
    #     file(APPEND "$ENV{GITHUB_OUTPUT}" "timestamp=${current_date}")

    # - name: ccache cache files
    #   uses: actions/cache@v3
    #   with:
    #     path: .ccache
    #     key: ${{ matrix.config.name }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
    #     restore-keys: |
    #       ${{ matrix.config.name }}-ccache-

    # - name: ccache statistics
    #   shell: cmake -P {0}
    #   run: |
    #     file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}" ccache_basedir)
    #     set(ENV{CCACHE_BASEDIR} "${ccache_basedir}")
    #     set(ENV{CCACHE_DIR} "${ccache_basedir}/.ccache")

    #     execute_process(COMMAND ccache -s)
  